# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Shared
  
    # Deleted Object
    class DeletedObject < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig


      field :deleted, T::Boolean, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('deleted') } }

      field :object, ::String, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('object') } }

      field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('id') } }

      field :slug, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('slug') } }


      sig { params(deleted: T::Boolean, object: ::String, id: T.nilable(::String), slug: T.nilable(::String)).void }
      def initialize(deleted: nil, object: nil, id: nil, slug: nil)
        @deleted = deleted
        @object = object
        @id = id
        @slug = slug
      end
    end
  end
end

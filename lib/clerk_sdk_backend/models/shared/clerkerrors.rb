# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Shared
  
    # Request was not successful
    class ClerkErrors < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig


      field :errors, T::Array[::ClerkSDKBackend::Shared::ClerkError], { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('errors') } }

      field :meta, T.nilable(::ClerkSDKBackend::Shared::ClerkErrorsMeta), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('meta') } }


      sig { params(errors: T::Array[::ClerkSDKBackend::Shared::ClerkError], meta: T.nilable(::ClerkSDKBackend::Shared::ClerkErrorsMeta)).void }
      def initialize(errors: nil, meta: nil)
        @errors = errors
        @meta = meta
      end
    end
  end
end

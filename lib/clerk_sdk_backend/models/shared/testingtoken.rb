# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Shared
  
    # A Testing Token
    class TestingToken < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig

      # Unix timestamp of the token's expiration time.
      # 
      field :expires_at, ::Integer, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('expires_at') } }

      field :object, ::ClerkSDKBackend::Shared::TestingTokenObject, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('object'), 'decoder': Utils.enum_from_string(::ClerkSDKBackend::Shared::TestingTokenObject, false) } }
      # The actual token. This value is meant to be passed in the `__clerk_testing_token` query parameter with requests to the Frontend API.
      field :token, ::String, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('token') } }


      sig { params(expires_at: ::Integer, object: ::ClerkSDKBackend::Shared::TestingTokenObject, token: ::String).void }
      def initialize(expires_at: nil, object: nil, token: nil)
        @expires_at = expires_at
        @object = object
        @token = token
      end
    end
  end
end

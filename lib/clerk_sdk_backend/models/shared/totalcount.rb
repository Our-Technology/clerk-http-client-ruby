# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Shared
  
    # Success
    class TotalCount < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig

      # String representing the object's type. Objects of the same type share the same value.
      # 
      field :object, ::ClerkSDKBackend::Shared::TotalCountObject, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('object'), 'decoder': Utils.enum_from_string(::ClerkSDKBackend::Shared::TotalCountObject, false) } }

      field :total_count, ::Integer, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('total_count') } }


      sig { params(object: ::ClerkSDKBackend::Shared::TotalCountObject, total_count: ::Integer).void }
      def initialize(object: nil, total_count: nil)
        @object = object
        @total_count = total_count
      end
    end
  end
end

# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Shared
  

    class PublicOrganizationData < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig


      field :has_image, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('has_image') } }

      field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('id') } }

      field :image_url, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('image_url') } }

      field :name, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('name') } }

      field :slug, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('slug') } }


      sig { params(has_image: T.nilable(T::Boolean), id: T.nilable(::String), image_url: T.nilable(::String), name: T.nilable(::String), slug: T.nilable(::String)).void }
      def initialize(has_image: nil, id: nil, image_url: nil, name: nil, slug: nil)
        @has_image = has_image
        @id = id
        @image_url = image_url
        @name = name
        @slug = slug
      end
    end
  end
end

# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Shared
  
    # Success
    class OrganizationSettings < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig

      # The default for whether an admin can delete an organization with the Frontend API.
      field :admin_delete_enabled, T::Boolean, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('admin_delete_enabled') } }
      # The role key that a user will be assigned after creating an organization.
      field :creator_role, ::String, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('creator_role') } }
      # The role key that it will be used in order to create an organization invitation or suggestion.
      field :domains_default_role, ::String, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('domains_default_role') } }

      field :domains_enabled, T::Boolean, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('domains_enabled') } }

      field :domains_enrollment_modes, T::Array[::ClerkSDKBackend::Shared::DomainsEnrollmentModes], { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('domains_enrollment_modes') } }

      field :enabled, T::Boolean, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('enabled') } }

      field :max_allowed_memberships, ::Integer, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('max_allowed_memberships') } }
      # String representing the object's type. Objects of the same type share the same value.
      field :object, ::ClerkSDKBackend::Shared::OrganizationSettingsObject, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('object'), 'decoder': Utils.enum_from_string(::ClerkSDKBackend::Shared::OrganizationSettingsObject, false) } }

      field :max_allowed_permissions, T.nilable(::Integer), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('max_allowed_permissions') } }

      field :max_allowed_roles, T.nilable(::Integer), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('max_allowed_roles') } }


      sig { params(admin_delete_enabled: T::Boolean, creator_role: ::String, domains_default_role: ::String, domains_enabled: T::Boolean, domains_enrollment_modes: T::Array[::ClerkSDKBackend::Shared::DomainsEnrollmentModes], enabled: T::Boolean, max_allowed_memberships: ::Integer, object: ::ClerkSDKBackend::Shared::OrganizationSettingsObject, max_allowed_permissions: T.nilable(::Integer), max_allowed_roles: T.nilable(::Integer)).void }
      def initialize(admin_delete_enabled: nil, creator_role: nil, domains_default_role: nil, domains_enabled: nil, domains_enrollment_modes: nil, enabled: nil, max_allowed_memberships: nil, object: nil, max_allowed_permissions: nil, max_allowed_roles: nil)
        @admin_delete_enabled = admin_delete_enabled
        @creator_role = creator_role
        @domains_default_role = domains_default_role
        @domains_enabled = domains_enabled
        @domains_enrollment_modes = domains_enrollment_modes
        @enabled = enabled
        @max_allowed_memberships = max_allowed_memberships
        @object = object
        @max_allowed_permissions = max_allowed_permissions
        @max_allowed_roles = max_allowed_roles
      end
    end
  end
end

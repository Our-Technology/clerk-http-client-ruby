# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Shared
  

    class SchemasSAMLConnection < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig


      field :acs_url, ::String, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('acs_url') } }

      field :active, T::Boolean, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('active') } }
      # Unix timestamp of creation.
      # 
      field :created_at, ::Integer, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('created_at') } }

      field :domain, ::String, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('domain') } }

      field :id, ::String, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('id') } }

      field :idp_certificate, ::String, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('idp_certificate') } }

      field :idp_entity_id, ::String, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('idp_entity_id') } }

      field :idp_sso_url, ::String, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('idp_sso_url') } }

      field :name, ::String, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('name') } }

      field :object, ::ClerkSDKBackend::Shared::SchemasSAMLConnectionObject, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('object'), 'decoder': Utils.enum_from_string(::ClerkSDKBackend::Shared::SchemasSAMLConnectionObject, false) } }

      field :provider, ::String, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('provider') } }

      field :sp_entity_id, ::String, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('sp_entity_id') } }

      field :sp_metadata_url, ::String, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('sp_metadata_url') } }

      field :sync_user_attributes, T::Boolean, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('sync_user_attributes') } }
      # Unix timestamp of last update.
      # 
      field :updated_at, ::Integer, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('updated_at') } }

      field :user_count, ::Integer, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('user_count') } }

      field :allow_idp_initiated, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('allow_idp_initiated') } }

      field :allow_subdomains, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('allow_subdomains') } }

      field :attribute_mapping, T.nilable(::ClerkSDKBackend::Shared::AttributeMapping), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('attribute_mapping') } }

      field :disable_additional_identifications, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('disable_additional_identifications') } }

      field :idp_metadata, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('idp_metadata') } }

      field :idp_metadata_url, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('idp_metadata_url') } }


      sig { params(acs_url: ::String, active: T::Boolean, created_at: ::Integer, domain: ::String, id: ::String, idp_certificate: ::String, idp_entity_id: ::String, idp_sso_url: ::String, name: ::String, object: ::ClerkSDKBackend::Shared::SchemasSAMLConnectionObject, provider: ::String, sp_entity_id: ::String, sp_metadata_url: ::String, sync_user_attributes: T::Boolean, updated_at: ::Integer, user_count: ::Integer, allow_idp_initiated: T.nilable(T::Boolean), allow_subdomains: T.nilable(T::Boolean), attribute_mapping: T.nilable(::ClerkSDKBackend::Shared::AttributeMapping), disable_additional_identifications: T.nilable(T::Boolean), idp_metadata: T.nilable(::String), idp_metadata_url: T.nilable(::String)).void }
      def initialize(acs_url: nil, active: nil, created_at: nil, domain: nil, id: nil, idp_certificate: nil, idp_entity_id: nil, idp_sso_url: nil, name: nil, object: nil, provider: nil, sp_entity_id: nil, sp_metadata_url: nil, sync_user_attributes: nil, updated_at: nil, user_count: nil, allow_idp_initiated: nil, allow_subdomains: nil, attribute_mapping: nil, disable_additional_identifications: nil, idp_metadata: nil, idp_metadata_url: nil)
        @acs_url = acs_url
        @active = active
        @created_at = created_at
        @domain = domain
        @id = id
        @idp_certificate = idp_certificate
        @idp_entity_id = idp_entity_id
        @idp_sso_url = idp_sso_url
        @name = name
        @object = object
        @provider = provider
        @sp_entity_id = sp_entity_id
        @sp_metadata_url = sp_metadata_url
        @sync_user_attributes = sync_user_attributes
        @updated_at = updated_at
        @user_count = user_count
        @allow_idp_initiated = allow_idp_initiated
        @allow_subdomains = allow_subdomains
        @attribute_mapping = attribute_mapping
        @disable_additional_identifications = disable_additional_identifications
        @idp_metadata = idp_metadata
        @idp_metadata_url = idp_metadata_url
      end
    end
  end
end

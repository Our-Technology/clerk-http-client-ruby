# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Shared
  
    # An organization domain
    class OrganizationDomain < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig

      # Affiliation email address for the domain, if available.
      field :affiliation_email_address, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('affiliation_email_address') } }
      # Unix timestamp when the domain was created
      field :created_at, T.nilable(::Integer), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('created_at') } }
      # Mode of enrollment for the domain
      field :enrollment_mode, T.nilable(::ClerkSDKBackend::Shared::EnrollmentMode), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('enrollment_mode'), 'decoder': Utils.enum_from_string(::ClerkSDKBackend::Shared::EnrollmentMode, true) } }
      # Unique identifier for the organization domain
      field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('id') } }
      # Name of the organization domain
      field :name, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('name') } }
      # String representing the object's type. Objects of the same type share the same value. Always `organization_domain`
      # 
      field :object, T.nilable(::ClerkSDKBackend::Shared::OrganizationDomainObject), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('object'), 'decoder': Utils.enum_from_string(::ClerkSDKBackend::Shared::OrganizationDomainObject, true) } }
      # Unique identifier for the organization
      field :organization_id, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('organization_id') } }
      # Total number of pending invitations associated with this domain
      field :total_pending_invitations, T.nilable(::Integer), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('total_pending_invitations') } }
      # Total number of pending suggestions associated with this domain
      field :total_pending_suggestions, T.nilable(::Integer), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('total_pending_suggestions') } }
      # Unix timestamp of the last update to the domain
      field :updated_at, T.nilable(::Integer), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('updated_at') } }
      # Verification details for the domain
      field :verification, T.nilable(::ClerkSDKBackend::Shared::Verification), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('verification') } }


      sig { params(affiliation_email_address: T.nilable(::String), created_at: T.nilable(::Integer), enrollment_mode: T.nilable(::ClerkSDKBackend::Shared::EnrollmentMode), id: T.nilable(::String), name: T.nilable(::String), object: T.nilable(::ClerkSDKBackend::Shared::OrganizationDomainObject), organization_id: T.nilable(::String), total_pending_invitations: T.nilable(::Integer), total_pending_suggestions: T.nilable(::Integer), updated_at: T.nilable(::Integer), verification: T.nilable(::ClerkSDKBackend::Shared::Verification)).void }
      def initialize(affiliation_email_address: nil, created_at: nil, enrollment_mode: nil, id: nil, name: nil, object: nil, organization_id: nil, total_pending_invitations: nil, total_pending_suggestions: nil, updated_at: nil, verification: nil)
        @affiliation_email_address = affiliation_email_address
        @created_at = created_at
        @enrollment_mode = enrollment_mode
        @id = id
        @name = name
        @object = object
        @organization_id = organization_id
        @total_pending_invitations = total_pending_invitations
        @total_pending_suggestions = total_pending_suggestions
        @updated_at = updated_at
        @verification = verification
      end
    end
  end
end

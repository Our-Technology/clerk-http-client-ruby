# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Operations
  

    class CreateOrganizationDomainRequestBody < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig

      # The enrollment_mode for the new domain. This can be `automatic_invitation`, `automatic_suggestion` or `manual_invitation`
      field :enrollment_mode, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('enrollment_mode') } }
      # The name of the new domain
      field :name, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('name') } }
      # The status of domain's verification. Defaults to true
      field :verified, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('verified') } }


      sig { params(enrollment_mode: T.nilable(::String), name: T.nilable(::String), verified: T.nilable(T::Boolean)).void }
      def initialize(enrollment_mode: nil, name: nil, verified: nil)
        @enrollment_mode = enrollment_mode
        @name = name
        @verified = verified
      end
    end
  end
end

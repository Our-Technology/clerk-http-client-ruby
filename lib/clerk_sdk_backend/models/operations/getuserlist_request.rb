# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Operations
  

    class GetUserListRequest < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig

      # Returns users with the specified email addresses.
      # Accepts up to 100 email addresses.
      # Any email addresses not found are ignored.
      field :email_address, T.nilable(T::Array[::String]), { 'query_param': { 'field_name': 'email_address', 'style': 'form', 'explode': true } }
      # Returns users with the specified external ids.
      # For each external id, the `+` and `-` can be
      # prepended to the id, which denote whether the
      # respective external id should be included or
      # excluded from the result set.
      # Accepts up to 100 external ids.
      # Any external ids not found are ignored.
      field :external_id, T.nilable(T::Array[::String]), { 'query_param': { 'field_name': 'external_id', 'style': 'form', 'explode': true } }
      # Returns users that had session activity since the given date, with day precision.
      # Providing a value with higher precision than day will result in an error.
      # Example: use 1700690400000 to retrieve users that had session activity from 2023-11-23 until the current day.
      field :last_active_at_since, T.nilable(::Integer), { 'query_param': { 'field_name': 'last_active_at_since', 'style': 'form', 'explode': true } }
      # Applies a limit to the number of results returned.
      # Can be used for paginating the results together with `offset`.
      field :limit, T.nilable(::Float), { 'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': true } }
      # Skip the first `offset` results when paginating.
      # Needs to be an integer greater or equal to zero.
      # To be used in conjunction with `limit`.
      field :offset, T.nilable(::Float), { 'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': true } }
      # Allows to return users in a particular order.
      # At the moment, you can order the returned users by their `created_at`,`updated_at`,`email_address`,`web3wallet`,`first_name`,`last_name`,`phone_number`,`username`,`last_active_at`,`last_sign_in_at`.
      # In order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.
      # For example, if you want users to be returned in descending order according to their `created_at` property, you can use `-created_at`.
      # If you don't use `+` or `-`, then `+` is implied. We only support one `order_by` parameter, and if multiple `order_by` parameters are provided, we will only keep the first one. For example,
      # if you pass `order_by=username&order_by=created_at`, we will consider only the first `order_by` parameter, which is `username`. The `created_at` parameter will be ignored in this case.
      field :order_by, T.nilable(::String), { 'query_param': { 'field_name': 'order_by', 'style': 'form', 'explode': true } }
      # Returns users that have memberships to the
      # given organizations.
      # For each organization id, the `+` and `-` can be
      # prepended to the id, which denote whether the
      # respective organization should be included or
      # excluded from the result set.
      # Accepts up to 100 organization ids.
      field :organization_id, T.nilable(T::Array[::String]), { 'query_param': { 'field_name': 'organization_id', 'style': 'form', 'explode': true } }
      # Returns users with the specified phone numbers.
      # Accepts up to 100 phone numbers.
      # Any phone numbers not found are ignored.
      field :phone_number, T.nilable(T::Array[::String]), { 'query_param': { 'field_name': 'phone_number', 'style': 'form', 'explode': true } }
      # Returns users that match the given query.
      # For possible matches, we check the email addresses, phone numbers, usernames, web3 wallets, user ids, first and last names.
      # The query value doesn't need to match the exact value you are looking for, it is capable of partial matches as well.
      field :query, T.nilable(::String), { 'query_param': { 'field_name': 'query', 'style': 'form', 'explode': true } }
      # Returns users with the user ids specified.
      # For each user id, the `+` and `-` can be
      # prepended to the id, which denote whether the
      # respective user id should be included or
      # excluded from the result set.
      # Accepts up to 100 user ids.
      # Any user ids not found are ignored.
      field :user_id, T.nilable(T::Array[::String]), { 'query_param': { 'field_name': 'user_id', 'style': 'form', 'explode': true } }
      # Returns users with the specified usernames.
      # Accepts up to 100 usernames.
      # Any usernames not found are ignored.
      field :username, T.nilable(T::Array[::String]), { 'query_param': { 'field_name': 'username', 'style': 'form', 'explode': true } }
      # Returns users with the specified web3 wallet addresses.
      # Accepts up to 100 web3 wallet addresses.
      # Any web3 wallet addressed not found are ignored.
      field :web3_wallet, T.nilable(T::Array[::String]), { 'query_param': { 'field_name': 'web3_wallet', 'style': 'form', 'explode': true } }


      sig { params(email_address: T.nilable(T::Array[::String]), external_id: T.nilable(T::Array[::String]), last_active_at_since: T.nilable(::Integer), limit: T.nilable(::Float), offset: T.nilable(::Float), order_by: T.nilable(::String), organization_id: T.nilable(T::Array[::String]), phone_number: T.nilable(T::Array[::String]), query: T.nilable(::String), user_id: T.nilable(T::Array[::String]), username: T.nilable(T::Array[::String]), web3_wallet: T.nilable(T::Array[::String])).void }
      def initialize(email_address: nil, external_id: nil, last_active_at_since: nil, limit: nil, offset: nil, order_by: nil, organization_id: nil, phone_number: nil, query: nil, user_id: nil, username: nil, web3_wallet: nil)
        @email_address = email_address
        @external_id = external_id
        @last_active_at_since = last_active_at_since
        @limit = limit
        @offset = offset
        @order_by = order_by
        @organization_id = organization_id
        @phone_number = phone_number
        @query = query
        @user_id = user_id
        @username = username
        @web3_wallet = web3_wallet
      end
    end
  end
end

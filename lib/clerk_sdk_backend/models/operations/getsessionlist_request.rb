# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Operations
  

    class GetSessionListRequest < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig

      # List sessions for the given client
      field :client_id, T.nilable(::String), { 'query_param': { 'field_name': 'client_id', 'style': 'form', 'explode': true } }
      # Applies a limit to the number of results returned.
      # Can be used for paginating the results together with `offset`.
      field :limit, T.nilable(::Float), { 'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': true } }
      # Skip the first `offset` results when paginating.
      # Needs to be an integer greater or equal to zero.
      # To be used in conjunction with `limit`.
      field :offset, T.nilable(::Float), { 'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': true } }
      # Filter sessions by the provided status
      field :status, T.nilable(::ClerkSDKBackend::Operations::Status), { 'query_param': { 'field_name': 'status', 'style': 'form', 'explode': true } }
      # List sessions for the given user
      field :user_id, T.nilable(::String), { 'query_param': { 'field_name': 'user_id', 'style': 'form', 'explode': true } }


      sig { params(client_id: T.nilable(::String), limit: T.nilable(::Float), offset: T.nilable(::Float), status: T.nilable(::ClerkSDKBackend::Operations::Status), user_id: T.nilable(::String)).void }
      def initialize(client_id: nil, limit: nil, offset: nil, status: nil, user_id: nil)
        @client_id = client_id
        @limit = limit
        @offset = offset
        @status = status
        @user_id = user_id
      end
    end
  end
end

# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Operations
  

    class CreateSignInTokenRequestBody < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig

      # Optional parameter to specify the life duration of the sign in token in seconds.
      # By default, the duration is 30 days.
      field :expires_in_seconds, T.nilable(::Integer), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('expires_in_seconds') } }
      # The ID of the user that can use the newly created sign in token
      field :user_id, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('user_id') } }


      sig { params(expires_in_seconds: T.nilable(::Integer), user_id: T.nilable(::String)).void }
      def initialize(expires_in_seconds: nil, user_id: nil)
        @expires_in_seconds = expires_in_seconds
        @user_id = user_id
      end
    end
  end
end

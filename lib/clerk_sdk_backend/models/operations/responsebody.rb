# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Operations
  

    class ResponseBody < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig

      # External account ID
      field :external_account_id, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('external_account_id') } }

      field :label, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('label') } }

      field :object, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('object') } }
      # The ID of the provider
      field :provider, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('provider') } }
      # The unique ID of the user in the external provider's system
      field :provider_user_id, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('provider_user_id') } }

      field :public_metadata, T.nilable(::ClerkSDKBackend::Operations::GetOAuthAccessTokenPublicMetadata), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('public_metadata') } }
      # The list of scopes that the token is valid for.
      # Only present for OAuth 2.0 tokens.
      field :scopes, T.nilable(T::Array[::String]), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('scopes') } }
      # The access token
      field :token, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('token') } }
      # The token secret. Only present for OAuth 1.0 tokens.
      field :token_secret, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('token_secret') } }


      sig { params(external_account_id: T.nilable(::String), label: T.nilable(::String), object: T.nilable(::String), provider: T.nilable(::String), provider_user_id: T.nilable(::String), public_metadata: T.nilable(::ClerkSDKBackend::Operations::GetOAuthAccessTokenPublicMetadata), scopes: T.nilable(T::Array[::String]), token: T.nilable(::String), token_secret: T.nilable(::String)).void }
      def initialize(external_account_id: nil, label: nil, object: nil, provider: nil, provider_user_id: nil, public_metadata: nil, scopes: nil, token: nil, token_secret: nil)
        @external_account_id = external_account_id
        @label = label
        @object = object
        @provider = provider
        @provider_user_id = provider_user_id
        @public_metadata = public_metadata
        @scopes = scopes
        @token = token
        @token_secret = token_secret
      end
    end
  end
end

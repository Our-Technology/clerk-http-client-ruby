# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Operations
  

    class VerifyDomainProxyRequestBody < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig

      # The ID of the domain that will be updated.
      field :domain_id, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('domain_id') } }
      # The full URL of the proxy which will forward requests to the Clerk Frontend API for this domain. e.g. https://example.com/__clerk
      field :proxy_url, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('proxy_url') } }


      sig { params(domain_id: T.nilable(::String), proxy_url: T.nilable(::String)).void }
      def initialize(domain_id: nil, proxy_url: nil)
        @domain_id = domain_id
        @proxy_url = proxy_url
      end
    end
  end
end

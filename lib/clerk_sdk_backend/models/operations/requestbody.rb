# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Operations
  

    class RequestBody < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig

      # The email address of the new member that is going to be invited to the organization
      field :email_address, ::String, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('email_address') } }
      # The role of the new member in the organization.
      field :role, ::String, { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('role') } }
      # The ID of the user that invites the new member to the organization.
      # Must be an administrator in the organization.
      field :inviter_user_id, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('inviter_user_id') } }
      # Metadata saved on the organization invitation, fully accessible (read/write) from the Backend API but not visible from the Frontend API.
      field :private_metadata, T.nilable(::ClerkSDKBackend::Operations::CreateOrganizationInvitationBulkPrivateMetadata), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('private_metadata') } }
      # Metadata saved on the organization invitation, read-only from the Frontend API and fully accessible (read/write) from the Backend API.
      field :public_metadata, T.nilable(::ClerkSDKBackend::Operations::CreateOrganizationInvitationBulkPublicMetadata), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('public_metadata') } }
      # Optional URL that the invitee will be redirected to once they accept the invitation by clicking the join link in the invitation email.
      field :redirect_url, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('redirect_url') } }


      sig { params(email_address: ::String, role: ::String, inviter_user_id: T.nilable(::String), private_metadata: T.nilable(::ClerkSDKBackend::Operations::CreateOrganizationInvitationBulkPrivateMetadata), public_metadata: T.nilable(::ClerkSDKBackend::Operations::CreateOrganizationInvitationBulkPublicMetadata), redirect_url: T.nilable(::String)).void }
      def initialize(email_address: nil, role: nil, inviter_user_id: nil, private_metadata: nil, public_metadata: nil, redirect_url: nil)
        @email_address = email_address
        @role = role
        @inviter_user_id = inviter_user_id
        @private_metadata = private_metadata
        @public_metadata = public_metadata
        @redirect_url = redirect_url
      end
    end
  end
end

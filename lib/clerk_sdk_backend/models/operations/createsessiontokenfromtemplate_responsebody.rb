# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Operations
  
    # OK
    class CreateSessionTokenFromTemplateResponseBody < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig


      field :jwt, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('jwt') } }

      field :object, T.nilable(::ClerkSDKBackend::Operations::Object), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('object'), 'decoder': Utils.enum_from_string(::ClerkSDKBackend::Operations::Object, true) } }


      sig { params(jwt: T.nilable(::String), object: T.nilable(::ClerkSDKBackend::Operations::Object)).void }
      def initialize(jwt: nil, object: nil)
        @jwt = jwt
        @object = object
      end
    end
  end
end

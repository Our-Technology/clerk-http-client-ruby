# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Operations
  

    class ListInvitationsRequest < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig

      # Applies a limit to the number of results returned.
      # Can be used for paginating the results together with `offset`.
      field :limit, T.nilable(::Float), { 'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': true } }
      # Skip the first `offset` results when paginating.
      # Needs to be an integer greater or equal to zero.
      # To be used in conjunction with `limit`.
      field :offset, T.nilable(::Float), { 'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': true } }
      # Filter invitations based on their status
      field :status, T.nilable(::ClerkSDKBackend::Operations::ListInvitationsQueryParamStatus), { 'query_param': { 'field_name': 'status', 'style': 'form', 'explode': true } }


      sig { params(limit: T.nilable(::Float), offset: T.nilable(::Float), status: T.nilable(::ClerkSDKBackend::Operations::ListInvitationsQueryParamStatus)).void }
      def initialize(limit: nil, offset: nil, status: nil)
        @limit = limit
        @offset = offset
        @status = status
      end
    end
  end
end

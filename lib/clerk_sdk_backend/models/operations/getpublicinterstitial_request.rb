# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Operations
  

    class GetPublicInterstitialRequest < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig

      # The Frontend API key of your instance
      field :frontend_api, T.nilable(::String), { 'query_param': { 'field_name': 'frontendApi', 'style': 'form', 'explode': true } }
      # The publishable key of your instance
      field :publishable_key, T.nilable(::String), { 'query_param': { 'field_name': 'publishable_key', 'style': 'form', 'explode': true } }


      sig { params(frontend_api: T.nilable(::String), publishable_key: T.nilable(::String)).void }
      def initialize(frontend_api: nil, publishable_key: nil)
        @frontend_api = frontend_api
        @publishable_key = publishable_key
      end
    end
  end
end

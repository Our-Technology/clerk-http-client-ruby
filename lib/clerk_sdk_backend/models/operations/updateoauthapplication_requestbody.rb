# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Operations
  

    class UpdateOAuthApplicationRequestBody < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig

      # The new callback URL of the OAuth application
      field :callback_url, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('callback_url') } }
      # The new name of the OAuth application
      field :name, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('name') } }
      # Define the allowed scopes for the new OAuth applications that dictate the user payload of the OAuth user info endpoint. Available scopes are `profile`, `email`, `public_metadata`, `private_metadata`. Provide the requested scopes as a string, separated by spaces.
      field :scopes, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('scopes') } }


      sig { params(callback_url: T.nilable(::String), name: T.nilable(::String), scopes: T.nilable(::String)).void }
      def initialize(callback_url: nil, name: nil, scopes: nil)
        @callback_url = callback_url
        @name = name
        @scopes = scopes
      end
    end
  end
end

# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Operations
  

    class MergeOrganizationMetadataRequestBody < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig

      # Metadata saved on the organization that is only visible to your backend.
      # The new object will be merged with the existing value.
      field :private_metadata, T.nilable(::ClerkSDKBackend::Operations::MergeOrganizationMetadataPrivateMetadata), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('private_metadata') } }
      # Metadata saved on the organization, that is visible to both your frontend and backend.
      # The new object will be merged with the existing value.
      field :public_metadata, T.nilable(::ClerkSDKBackend::Operations::MergeOrganizationMetadataPublicMetadata), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('public_metadata') } }


      sig { params(private_metadata: T.nilable(::ClerkSDKBackend::Operations::MergeOrganizationMetadataPrivateMetadata), public_metadata: T.nilable(::ClerkSDKBackend::Operations::MergeOrganizationMetadataPublicMetadata)).void }
      def initialize(private_metadata: nil, public_metadata: nil)
        @private_metadata = private_metadata
        @public_metadata = public_metadata
      end
    end
  end
end

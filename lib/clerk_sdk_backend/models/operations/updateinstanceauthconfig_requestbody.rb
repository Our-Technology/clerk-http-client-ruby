# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Operations
  

    class UpdateInstanceAuthConfigRequestBody < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig

      # The "enhanced_email_deliverability" feature will send emails from "verifications@clerk.dev" instead of your domain.
      # This can be helpful if you do not have a high domain reputation.
      field :enhanced_email_deliverability, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('enhanced_email_deliverability') } }
      # The local part of the email address from which authentication-related emails (e.g. OTP code, magic links) will be sent.
      # Only alphanumeric values are allowed.
      # Note that this value should contain only the local part of the address (e.g. `foo` for `foo@example.com`).
      field :from_email_address, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('from_email_address') } }
      # Enable the Progressive Sign Up algorithm. Refer to the [docs](https://clerk.com/docs/upgrade-guides/progressive-sign-up) for more info.
      field :progressive_sign_up, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('progressive_sign_up') } }
      # Whether sign up is restricted to email addresses, phone numbers and usernames that are on the allowlist.
      field :restricted_to_allowlist, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('restricted_to_allowlist') } }
      # The name of the JWT Template used to augment your session tokens. To disable this, pass an empty string.
      field :session_token_template, T.nilable(::String), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('session_token_template') } }
      # Toggles test mode for this instance, allowing the use of test email addresses and phone numbers.
      # Defaults to true for development instances.
      field :test_mode, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('test_mode') } }


      sig { params(enhanced_email_deliverability: T.nilable(T::Boolean), from_email_address: T.nilable(::String), progressive_sign_up: T.nilable(T::Boolean), restricted_to_allowlist: T.nilable(T::Boolean), session_token_template: T.nilable(::String), test_mode: T.nilable(T::Boolean)).void }
      def initialize(enhanced_email_deliverability: nil, from_email_address: nil, progressive_sign_up: nil, restricted_to_allowlist: nil, session_token_template: nil, test_mode: nil)
        @enhanced_email_deliverability = enhanced_email_deliverability
        @from_email_address = from_email_address
        @progressive_sign_up = progressive_sign_up
        @restricted_to_allowlist = restricted_to_allowlist
        @session_token_template = session_token_template
        @test_mode = test_mode
      end
    end
  end
end

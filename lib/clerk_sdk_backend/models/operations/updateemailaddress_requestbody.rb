# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Operations
  

    class UpdateEmailAddressRequestBody < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig

      # Set this email address as the primary email address for the user.
      field :primary, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('primary') } }
      # The email address will be marked as verified.
      field :verified, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('verified') } }


      sig { params(primary: T.nilable(T::Boolean), verified: T.nilable(T::Boolean)).void }
      def initialize(primary: nil, verified: nil)
        @primary = primary
        @verified = verified
      end
    end
  end
end

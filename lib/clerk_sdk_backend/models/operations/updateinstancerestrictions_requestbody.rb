# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Operations
  

    class UpdateInstanceRestrictionsRequestBody < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig


      field :allowlist, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('allowlist') } }

      field :block_disposable_email_domains, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('block_disposable_email_domains') } }

      field :block_email_subaddresses, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('block_email_subaddresses') } }

      field :blocklist, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('blocklist') } }

      field :ignore_dots_for_gmail_addresses, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::ClerkSDKBackend::Utils.field_name('ignore_dots_for_gmail_addresses') } }


      sig { params(allowlist: T.nilable(T::Boolean), block_disposable_email_domains: T.nilable(T::Boolean), block_email_subaddresses: T.nilable(T::Boolean), blocklist: T.nilable(T::Boolean), ignore_dots_for_gmail_addresses: T.nilable(T::Boolean)).void }
      def initialize(allowlist: nil, block_disposable_email_domains: nil, block_email_subaddresses: nil, blocklist: nil, ignore_dots_for_gmail_addresses: nil)
        @allowlist = allowlist
        @block_disposable_email_domains = block_disposable_email_domains
        @block_email_subaddresses = block_email_subaddresses
        @blocklist = blocklist
        @ignore_dots_for_gmail_addresses = ignore_dots_for_gmail_addresses
      end
    end
  end
end

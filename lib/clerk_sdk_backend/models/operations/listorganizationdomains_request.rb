# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module ClerkSDKBackend
  module Operations
  

    class ListOrganizationDomainsRequest < ::ClerkSDKBackend::Utils::FieldAugmented
      extend T::Sig

      # The organization ID.
      field :organization_id, ::String, { 'path_param': { 'field_name': 'organization_id', 'style': 'simple', 'explode': false } }
      # Filter domains by their enrollment mode
      field :enrollment_mode, T.nilable(::String), { 'query_param': { 'field_name': 'enrollment_mode', 'style': 'form', 'explode': true } }
      # Applies a limit to the number of results returned.
      # Can be used for paginating the results together with `offset`.
      field :limit, T.nilable(::Float), { 'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': true } }
      # Skip the first `offset` results when paginating.
      # Needs to be an integer greater or equal to zero.
      # To be used in conjunction with `limit`.
      field :offset, T.nilable(::Float), { 'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': true } }
      # Filter domains by their verification status. `true` or `false`
      field :verified, T.nilable(::String), { 'query_param': { 'field_name': 'verified', 'style': 'form', 'explode': true } }


      sig { params(organization_id: ::String, enrollment_mode: T.nilable(::String), limit: T.nilable(::Float), offset: T.nilable(::Float), verified: T.nilable(::String)).void }
      def initialize(organization_id: nil, enrollment_mode: nil, limit: nil, offset: nil, verified: nil)
        @organization_id = organization_id
        @enrollment_mode = enrollment_mode
        @limit = limit
        @offset = offset
        @verified = verified
      end
    end
  end
end
